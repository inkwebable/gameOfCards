var GameOfCards=function(e){var t={};function a(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=t,a.d=function(e,t,s){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(s,r,function(t){return e[t]}.bind(null,r));return s},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=4)}([function(e,t,a){var s=a(1),r=a(2);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var i={insert:"head",singleton:!1};s(r,i);e.exports=r.locals||{}},function(e,t,a){"use strict";var s,r=function(){return void 0===s&&(s=Boolean(window&&document&&document.all&&!window.atob)),s},i=function(){var e={};return function(t){if(void 0===e[t]){var a=document.querySelector(t);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}e[t]=a}return e[t]}}(),n=[];function o(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function d(e,t){for(var a={},s=[],r=0;r<e.length;r++){var i=e[r],d=t.base?i[0]+t.base:i[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var h=o(l),u={css:i[1],media:i[2],sourceMap:i[3]};-1!==h?(n[h].references++,n[h].updater(u)):n.push({identifier:l,updater:v(u,t),references:1}),s.push(l)}return s}function c(e){var t=document.createElement("style"),s=e.attributes||{};if(void 0===s.nonce){var r=a.nc;r&&(s.nonce=r)}if(Object.keys(s).forEach((function(e){t.setAttribute(e,s[e])})),"function"==typeof e.insert)e.insert(t);else{var n=i(e.insert||"head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(t)}return t}var l,h=(l=[],function(e,t){return l[e]=t,l.filter(Boolean).join("\n")});function u(e,t,a,s){var r=a?"":s.media?"@media ".concat(s.media," {").concat(s.css,"}"):s.css;if(e.styleSheet)e.styleSheet.cssText=h(t,r);else{var i=document.createTextNode(r),n=e.childNodes;n[t]&&e.removeChild(n[t]),n.length?e.insertBefore(i,n[t]):e.appendChild(i)}}function f(e,t,a){var s=a.css,r=a.media,i=a.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),i&&btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=s;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(s))}}var m=null,p=0;function v(e,t){var a,s,r;if(t.singleton){var i=p++;a=m||(m=c(t)),s=u.bind(null,a,i,!1),r=u.bind(null,a,i,!0)}else a=c(t),s=f.bind(null,a,t),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(a)};return s(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;s(e=t)}else r()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=r());var a=d(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var s=0;s<a.length;s++){var r=o(a[s]);n[r].references--}for(var i=d(e,t),c=0;c<a.length;c++){var l=o(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=i}}}},function(e,t,a){(t=a(3)(!1)).push([e.i,"",""]),e.exports=t},function(e,t,a){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var a=function(e,t){var a=e[1]||"",s=e[3];if(!s)return a;if(t&&"function"==typeof btoa){var r=(n=s,o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),"/*# ".concat(d," */")),i=s.sources.map((function(e){return"/*# sourceURL=".concat(s.sourceRoot||"").concat(e," */")}));return[a].concat(i).concat([r]).join("\n")}var n,o,d;return[a].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(a,"}"):a})).join("")},t.i=function(e,a,s){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(s)for(var i=0;i<this.length;i++){var n=this[i][0];null!=n&&(r[n]=!0)}for(var o=0;o<e.length;o++){var d=[].concat(e[o]);s&&r[d[0]]||(a&&(d[2]?d[2]="".concat(a," and ").concat(d[2]):d[2]=a),t.push(d))}},t}},function(e,t,a){"use strict";a.r(t),a.d(t,"Game",(function(){return p})),a.d(t,"Deck",(function(){return i})),a.d(t,"Actions",(function(){return s}));var s={};a.r(s),a.d(s,"wait",(function(){return v})),a.d(s,"cardShuffle",(function(){return C})),a.d(s,"swapDomElements",(function(){return g})),a.d(s,"animateCardFromOneAreaToAnother",(function(){return b})),a.d(s,"dealCards",(function(){return y}));a(0);var r=class{constructor(e){let t=Object.assign({},{name:"",value:0,suit:"",image:"",imageDefault:"front",cardColor:"",visible:!1,allowFlip:!0,clickable:!0,movable:!0,moving:!1,droppable:!1,inArea:null,transitioning:!1,faceUp:!1,faceDown:!0,currentEvent:null,events:{click:()=>{},transitionend:()=>{}},onClick:e=>{},onCardFaceUp:()=>{},onCardFaceDown:()=>{}},e);Object.defineProperties(this,{_id:{value:t.id||void 0,writable:!1}}),this.name=t.name||"",this.value=t.value||0,this.suit=t.suit||"",this.image=t.image||"",this.imageDefault=t.imageDefault,this.cardColor=t.cardColor||"",this.visible=t.visible||!1,this.allowFlip=t.allowFlip||!0,this.clickable=t.clickable||!0,this.movable=t.movable||!0,this.moving=t.moving||!1,this.droppable=t.droppable||!1,this.inArea=t.inArea||null,this.transitioning=t.transitioning||!1,this.faceUp=t.faceUp||!1,this.faceDown=t.faceDown||!0,this.currentEvent=t.currentEvent||null,this.events=t.events||{},this.onClick=t.onClick||(e=>{}),this.onCardFaceUp=t.onCardFaceUp||(e=>{}),this.onCardFaceDown=t.onCardFaceDown||(e=>{})}setDom(e){Object.defineProperty(this,"dom",{value:e,writable:!1})}setDOMClassContainer(e){this.dom.className=e}addDOMClassContainer(e){this.dom.className+=" "+e}setDOMClassCard(e){this.dom.children[0].className=e}addDOMClassCard(e){this.dom.children[0].className+=" "+e}setClickEvent(e,t,a=!0){return this.onClick=e.bind(this,t),a&&this.activateClickEventListener(),this.onClick}setTransitionEvent({onCardFaceUp:e,onCardFaceDown:t},a,s=!0){e&&(this.onCardFaceUp=e.bind(this,a)),t&&(this.onCardFaceDown=t.bind(this,a)),s&&this.activateTransitionedEventListener()}activateClickEventListener(){this.clearClickListener(),this.events.click=this.onClick,this.dom.addEventListener("click",this.events.click)}activateTransitionedEventListener(){this.clearTransitionedListener(),this.events.transitionend=this._afterTransition.bind(this),this.dom.addEventListener("transitionend",this.events.transitionend)}activateAllEventListeners(){console.log("core/Card activateAllEvents",this),this.removeAllEventListeners(),this.activateClickEventListener(),this.activateTransitionedEventListener()}removeAllEventListeners(){this.clearClickListener(),this.clearTransitionedListener()}removeAllEvents(){console.log("core/Card removeAllEvents",this);const e=[];for(let t in this.events)this.clearEvent(t)?(e.push(t+" removed"),this.events[t]=()=>{}):console.error(`${t}event not removed from card ${this._id}`);return e}clearEvent(e){return!!{}.hasOwnProperty.call(this.events,e)&&(this.dom.removeEventListener(e,this.events[e]),!0)}clearClickListener(e=this.events.click){this.dom.removeEventListener("click",e)}clearTransitionedListener(e=this.events.transitionend){this.dom.removeEventListener("transitionend",e)}flipCardFaceUp(){return this.currentEvent="flipCardFaceUp",!this.visible&&(this.dom.querySelector(".front img").src=this.image,this.addDOMClassCard(" flipped"),this.transitioning=!0,!0)}flipCardFaceDown(){return this.currentEvent="flipCardFaceDown",!!this.visible&&(this.setDOMClassCard("card"),this.transitioning=!0,!0)}_afterTransition(e){console.log("aftertran",this,e),this.transitioning=!1,"flipCardFaceUp"===this.currentEvent&&(this.visible=!0,this.onCardFaceUp(e)),"flipCardFaceDown"===this.currentEvent&&(this.visible=!1,this.onCardFaceDown(e),this.clearFrontFaceImg())}clearFrontFaceImg(e=this.imageDefault){this.dom.querySelector(".front img").src=""+e}isTransitioning(){return!0===this.transitioning}};class i{constructor(e,t="standard playing cards",a="js-deck",s){const r=Object.assign({},{numberOfEachCard:1,cardSuits:{hearts:"red",clubs:"black",diamonds:"red",spades:"black"},cardValues:{A:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13},imageNames:[],imagePath:"images/game-of-cards/default-cards",backOfCardSrc:"back.png",frontOfCardSrc:"front.png",cardSectionClass:"card-container",customCardContainerClass:"",imageExt:"jpg",useSuits:!0,addValues:!0},s);Object.defineProperties(this,{_id:{value:e,writable:!1}}),Object.defineProperties(this,{name:{value:t,writable:!1}}),Object.defineProperties(this,{elementId:{value:a,writable:!1}}),this._ids=r._ids||[],this._DOMCards=r._DOMCards||[],this._DOMDeck=r._DOMDeck||[],this.numberOfEachCard=r.numberOfEachCard||1,this.cardSuits=r.cardSuits,this.imageNames=r.imageNames,this.cardValues=r.cardValues,this.imagePath=r.imagePath,this.cardSectionClass=r.cardSectionClass,this.backOfCardSrc=r.backOfCardSrc,this.frontOfCardSrc=r.frontOfCardSrc,this.imageExt=r.imageExt,this.cards=r.cards||[],this.customCardContainerClass=r.customCardContainerClass,this.useSuits=r.useSuits,this.addValues=r.addValues,this.areas=r.areas,this.createDeckObj()}newNumber(e){let t="_"+Math.floor(1e7*Math.random());return-1===e.indexOf(t)?(e.push(t),t):this.newNumber(e)}createDeckObj(){for(const e in this.cardSuits)for(const t in this.cardValues){let a=0;for(;a<this.numberOfEachCard;){let s=this.newNumber(this._ids),i=new r({name:t,value:this.addValues?this.cardValues[t]:0,suit:this.useSuits?e:"",image:`${this.imagePath}/${t}${e}.${this.imageExt}`,imageDefault:`${this.imagePath}/${this.frontOfCardSrc}`,cardColor:this.cardSuits[e],id:s.toString()});this.cards.push(i),a++}}}makeDomDeck(e=this._DOMCards){for(let t=0;t<this.cards.length;t++)e.push(`<section key="${t}" class="${this.cardSectionClass} ${this.customCardContainerClass}" style="transform: translate(0px,0px);">\n                <div class="card" id="${this.cards[t]._id}">\n                <figure class="back"><img src="${this.imagePath}/${this.backOfCardSrc}" alt="back of card"></figure>\n                <figure class="front"><img src="${this.imagePath}/${this.frontOfCardSrc}" alt="front of card"></figure>\n                <p class="cheat">${this.cards[t].name} ${this.cards[t].suit}</p>\n                </div>\n                </section>`)}addDeckToDOM(e=this.elementId,t=this._DOMCards){document.getElementById(e).innerHTML=t.join("")}assignCardDomToCardObj(e=this.cards){let t,a=[];for(let s of e)t=document.getElementById(s._id),a.push(t),s.setDom(t.parentNode);return a}shuffleCardsObj(e=this.cards){let t,a,s=e.length;for(;0!==s;)a=Math.floor(Math.random()*s),s-=1,t=e[s],e[s]=e[a],e[a]=t;return e}findCardById(e){return this.cards.find(t=>t._id===e)}handleMyErrors(e){console.error("error",e)}}class n extends i{constructor({id:e,name:t,elementId:a,options:s}){super(e,t,a,s)}}class o extends i{constructor({id:e,name:t,elementId:a,options:s}){s.cardSuits={},s.cardValues=s.cardValues?s.cardValues:{},s.useSuits=!1,super(e,t,a,s)}createDeckObj(){if(this.imageNames.length>0)this.imageNames.forEach(e=>{let t=0;for(;t<this.numberOfEachCard;){let a=this.newNumber(this._ids),s=new r({name:e,value:this.addValues?this.cardValues[e]:0,suit:"",image:`${this.imagePath}/${e}.${this.imageExt}`,imageDefault:`${this.imagePath}/${this.frontOfCardSrc}`,cardColor:this.cardSuits.suit,id:a.toString()});this.cards.push(s),t++}});else if(Object.keys(this.cardValues).length>0)for(const e in this.cardValues){let t=0;for(;t<this.numberOfEachCard;){let a=this.newNumber(this._ids),s=new r({name:e,value:this.addValues?this.cardValues[e]:0,suit:"",image:`${this.imagePath}/${e}.${this.imageExt}`,imageDefault:`${this.imagePath}/${this.frontOfCardSrc}`,cardColor:this.cardSuits.suit,id:a.toString()});this.cards.push(s),t++}}}}class d{constructor(){this.deckClass=n}createDeck(e,t){switch(e){case"default":this.deckClass=n;break;case"matching":this.deckClass=o}return new this.deckClass(t)}}class c{constructor(e,t,a){const s=Object.assign({},{name:"area",id:"js-area",owner:"board",placeHolders:{},stackVertical:!1,maxCardsInHorizontal:0,flexArea:!0,dealCenterLine:!1},a);Object.defineProperties(this,{id:{value:e,writable:!1}}),this.name=t,this.owner=s.owner||"board",this.placeHolders=s.placeHolders||{},this.position={top:0,right:0,bottom:0,left:0},this.siteElementOffsets={top:72,right:0,bottom:0,left:0},this.cards=[],this.rules={cardsFaceDown:!0,cardsFaceUp:!1,canReceiveCards:!0,canRemoveCards:!0,canMoveCards:!1,canTurnCards:!0,playerCanSeeCards:!0,othersCanSeeCards:!0,maxCardsAllowed:void 0},this.handleCardReceived=e=>{},this.handleCardRemoved=e=>{console.log("dom removed from area",e)},this.events={},this.stackVertical=s.stackVertical,this.maxCardsInHorizontal=s.maxCardsInHorizontal||0,this.flexArea=s.flexArea,this.dealCenterLine=s.dealCenterLine,this.dom=void 0,this.getAreaPosition()}getAreaPosition(){let e=document.getElementById(this.id);this.dom=e;let t=e.getBoundingClientRect();this.position.top=t.top-this.siteElementOffsets.top,this.position.right=t.right-this.siteElementOffsets.right,this.position.bottom=t.bottom-this.siteElementOffsets.bottom,this.position.left=t.left-this.siteElementOffsets.left,console.log("getAreaPosition",this.id,this.position,e)}setObserver(){const e=this.dom;return new MutationObserver((e,t)=>{for(let t of e)"childList"===t.type?(t.addedNodes.length>0&&t.addedNodes.forEach(async e=>{await this.onCardReceived(e)}),t.removedNodes.length>0&&t.removedNodes.forEach(async e=>{await this.onCardRemoved(e)})):"attributes"===t.type&&console.log("The "+t.attributeName+" attribute was modified.")}).observe(e,{attributes:!1,childList:!0,subtree:!0}),this}async onCardReceived(e){return await this.handleCardReceived(e),Promise.resolve({someVal:"onCardReceived done"})}async onCardRemoved(e){return await this.handleCardRemoved(e),Promise.resolve({someVal:"onCardRemoved done"})}}class l{constructor(e,t){const a={cards:[],data:{test:"test"},rules:{test:"",cardsCanBeAdded:!0,cardsCanBeClicked:!0,cardsCanBeRemoved:!0,cardsCanBeSelected:!0,allowFlip:!0}};let s=Object.assign({},a,t),r=s.rules,i=s.data;Object.defineProperties(this,{_id:{value:e,writable:!1}});let n=Object.assign({},a.rules,r),o=Object.assign({},a.data,i);this.areas=[],this.area=s.area||{},this.rules=n,this.data=o,this.handleCardAdded=(e,t)=>{},this.handleCardRemoved=(e,t)=>{},this.cards=s.cards||[]}createArea(e,t,a){return this.area=new c(e,t,a),Object.defineProperty(this.area,"hand",{value:this,writable:!1}),this.area}addCardsToHand(e){let t=e.filter(e=>e instanceof r);this.cards=t}async addCardToHand(e){this.cards.push(e),await this.onCardAdded(e)}async removeCardFromHand(e){this.cards=this.cards.filter(t=>t._id!==e._id),await this.onCardRemoved(e)}async onCardAdded(e){return e.hand=this,await this.handleCardAdded(e,this),Promise.resolve({someVal:"Hand.onCardReceived done"})}async onCardRemoved(e){return e.hand=null,await this.handleCardRemoved(e,this),Promise.resolve({someVal:"Hand.onCardRemoved done"})}setUpCardEvents(){console.log("hand setUpCardEvents",this);for(let e of this.cards)e.activateAllEventListeners()}setCardClickFn(e,t=!0){if(this.cards.length>0)for(let t of this.cards)t.onClick=e.bind(this,{card:t}),t.activateClickEventListener()}setTransitionEvent({onCardFaceUp:e,onCardFaceDown:t},a=!0){if(this.cards.length>0)for(let s of this.cards)s.setTransitionEvent({onCardFaceUp:e.bind(this,{card:s}),onCardFaceDown:t.bind(this,{card:s})},a)}setAfterCardFaceUpFn(e,t=!0){if(this.cards.length>0)for(let a of this.cards)a.setTransitionEvent({onCardFaceUp:e.bind(this,{card:a})},t)}setAfterCardFaceDownFn(e,t=!0){if(this.cards.length>0)for(let a of this.cards)a.setTransitionEvent({onCardFaceDown:e.bind(this,{card:a})},t)}removeAllCardEvents(){for(let e of this.cards){console.log("Hand.removeAllCardEvents & listeners",e);const t=e.removeAllEvents();console.log("removed",t)}}allCardsTransitioned(){for(let e of this.cards)if(e.transitioning)return!1;return!0}getLastCard(){if(this.cards.length>0)return this.cards[this.cards.length-1]}findCardById(e){return this.cards.find(t=>t._id===e)}}class h{constructor(e,t="player",a){let s=Object.assign({},{playing:!0,ready:!1,turn:!1},a);Object.defineProperties(this,{_id:{value:e,writable:!1}}),this.name=t,this.hand=s||[],this.ready=s||!1,this.turn=s||!1}createHand(e,t){return this.hand=new l(e,t),Object.defineProperty(this.hand,"player",{value:this,writable:!1}),this.hand}}var u=class extends h{constructor({id:e,name:t,options:a}){super(e,t,a)}readyToPlay(){return this.ready=confirm("Ready to Start?"),this.ready}};class f extends h{constructor({id:e,name:t,options:a}){super(e,t,a),Object.defineProperty(this,"dealer",{value:a.dealer,writable:!1})}}class m{constructor(){this.playerClass=u}createPlayer(e,t){switch(e){case"ai":this.playerClass=f;break;default:this.playerClass=u}return new this.playerClass(t)}}class p{constructor(e){let t=Object.assign({},{name:"GameOfCards",data:{}},e);this.name=t.name,this.data=t.data,this.decks=[],this.players=[],Object.defineProperties(this,{deckFactory:{value:new d,writable:!1},playerFactory:{value:new m,writable:!1}})}createStandardDeck(e,t,a,s,r=!0){const i=this.deckFactory.createDeck("default",{id:e,name:t,elementId:a,options:s});return r&&this.addDeckToDecks(i),i}createDeck(e,t,a,s,r="default",i=!0){const n=this.deckFactory.createDeck(r,{id:e,name:t,elementId:a,options:s});return i&&this.addDeckToDecks(n),n}addDeckToDecks(e){return this.decks.push(e),this.decks}createPlayer(e,t,a,s=!0){const r=this.playerFactory.createPlayer("default",{id:e,name:t,options:a});return s&&this.addPlayerToPlayers(r),r}createDealer(e,t="dealer",a){let s=Object.assign({},{dealer:!0,ready:!1,playing:!1},a);const r=this.playerFactory.createPlayer("ai",{id:e,name:t,options:s});return s.playing&&this.addPlayerToPlayers(r),this.dealer=r,r}addPlayerToPlayers(e){this.players.push(e)}findPlayerByName(e){if(this.players.length>0)return this.players.find(t=>t.name===e)}addDeckToDom(e){return(e?this.findDeckById(e):this.decks[0]).addDeckToDOM(),this}assignCardDomToCardObj(e){return(e?this.findDeckById(e):this.decks[0]).assignCardDomToCardObj()}shuffleDeckCards(e){return(e?this.findDeckById(e):this.decks[0]).shuffleCardsObj(),this}makeDomMarkUp(e){return(e?this.findDeckById(e):this.decks[0]).makeDomDeck(),this}findDeckById(e){return this.decks.find(t=>t._id===e)}findPlayerById(e){return this.players.find(t=>t._id===e)}findCardById(e){let t=null;if(this.decks.length>0){for(;null===t;)for(let a of this.decks)t=a.findCardById(e);return t}}}const v=e=>new Promise(t=>setTimeout(t,e)),C=async(e=[],t=(()=>{}),a={})=>{let{index:s,delay:r}=Object.assign({},{index:0,delay:500},a);for(await v(r);s<=e.length-2;){let t=e[s],a=e[s+1],r=t.dom,i=a.dom;if(r.className="card-container shuffle-left",i&&(i.className="card-container shuffle-right"),await v(100),r.className="card-container shuffle-right",i){i.className="card-container shuffle-left",g(r,i);let n=t;e[s]=a,e[s+1]=n}s+=2}return await v(1e3),t(),Promise.resolve({data:s})},g=(e,t)=>{var a=t.parentNode,s=t.nextSibling;s===e?a.insertBefore(e,t):(e.parentNode.insertBefore(t,e),s?a.insertBefore(e,s):a.appendChild(e))},b=async(e,t,a,s)=>{let{speed:r,inlineFlex:i,moveCardObjects:n}=Object.assign({},{speed:300,inlineFlex:!1,moveCardObjects:!1},s);const o=window.getComputedStyle(a.dom);let d=a.dom.offsetWidth+(parseFloat(o.marginLeft)+parseFloat(o.marginRight)),c=a.dom.offsetHeight+(parseFloat(o.marginTop)+parseFloat(o.marginBottom)),l=t.cards.length*d,h=(t.cards.length,t.area.stackHorizontal,t.area.stackVertical),u=t.area.flexArea,f=t.area.maxCardsInHorizontal,m=t.area.dealCenterLine,p=0;if(u&&!h){let e=t.area.dom.offsetWidth<d?d:t.area.dom.offsetWidth;console.log("area.dom.width",t.area.dom.offsetWidth,e),f=Math.floor(parseInt(e,10)/parseInt(d,10)),console.log("max in hori "+f,t.area.dom.offsetWidth,d,t.cards.length)}if(h){let s=t.area.position.left-e.area.position.left,i=t.area.position.top-e.area.position.top;f>0?(p=parseInt(t.cards.length/f,10),l=d*(t.cards.length%f),s+=l,i+=p*c-(p>0?100*p:0)):i+=0,m&&(s=t.area.dom.offsetWidth/2-e.area.position.left),a.dom.style.position="absolute",a.dom.style.transform=`translate(${s}px,${i}px)`,a.dom.style.transition=`transform ${r}ms`}else{p=parseInt(t.cards.length/f,10),l=d*(t.cards.length%f),u&&t.cards.length===f&&0===l&&(p=0,l=d*t.cards.length);let s=t.area.position.left-e.area.position.left+l,n=t.area.position.top-e.area.position.top+p*c;m&&(s=0),i&&u&&(m&&(t.area.dom.style.justifyContent="center"),t.area.dom.style.display="flex",t.area.dom.style.flexWrap="wrap"),a.dom.style.position=u?"relative":"absolute",a.dom.style.transform=`translate(${s}px,${n}px)`,a.dom.style.transition=`transform ${r}ms`}return await v(r),a.dom.className="card-container",t.area.dom.appendChild(a.dom),h?(a.dom.style.position="absolute",a.dom.style.transform=f>0?`translate(${l}px,${p*c-(p>0?100*p:0)}px )`:"translate(0px,0px )",a.dom.style.transition=`transform ${r}ms`):(a.dom.style.position=u?"relative":"absolute",a.dom.style.transform=u?"translate(0,0)":`translate(${l}px,${p*c}px )`,a.dom.style.transition=`transform ${r}ms`),n&&(await e.cards.removeCardFromHand(a),await t.cards.addCardToHand(a)),Promise.resolve({data:"done"})},y=async(e,t,a={})=>{let{totalCardsToDeal:s,perPlayer:r,speed:i,sequential:n,delay:o,inlineFlex:d,moveCardObjects:c}=Object.assign({},{totalCardsToDeal:0,perPlayer:0,speed:300,sequential:!1,delay:1e3,inlineFlex:!1,moveCardObjects:!1},a);if(!e.hand.cards.length>0)return Promise.reject({error:"no cards"});let l=t.length,h=0,u=0,f=Array(l).fill(0);for(0!==r?s=r>0?r*l:s:r=s/l;h<s&&0!==e.hand.cards.length;){let a=e.hand.getLastCard();await b(e.hand,t[u].hand,a,{speed:i,moveCardObjects:c,inlineFlex:d}),await e.hand.removeCardFromHand(a),await t[u].hand.addCardToHand(a),f[u]+=1,n?t[u]&&(u=u>=l-1?0:u+1):f[u]===r&&(u=u>=l-1?0:u+1),h++}return Promise.resolve({data:"done"})}}]);